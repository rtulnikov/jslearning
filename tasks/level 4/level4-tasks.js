/*
yes
4.1
Создать функцию getNumberLessThenMine(), которая принимает два аргумента: массив и число, по умолчанию = 0. Функция должна возвращать
первое по счету число в массиве, которое будет меньше числа, указанного в качестве второго аргумента функции. 
Если такого числа нет - возвращаем undefind.
Использовать метод find().
EASY

4.2
yes
Создать функцию even(), которая принимает массив чисел и возвращает первое четное число. Для реализации использовать 
метод findIndex().
EASY

4.3
yes
Создать функцию getMinNumber(), которая принимает в качестве аргумента массив чисел. С помощью метода reduce() найти минимальный элемент
этого массива и вывести в консоль.
MEDIUM

4.4.
Создать функцию getRepeatedNumber(), которая принимает в качестве аргумента массив чисел ( [4, 5, 6, 4, 5] ), некоторые числа в нем должны
повторяться. C помощью методов find() и indexOf() найти первое повторяющееся значение массива.
Помнить, что метод find() принимает в качестве аргумента колбэк-функцию, которая, в свою очередь, принимает в качестве
первого аргумента - элемент, а в качестве второго аргумента - ИНДЕКС элемента.
numbers.find( (elem, index) => { ... } );
HARD

4.5
Создать функцию checkCapitalLetter(words), которая будет принимать массив слов и проверять, начинается ли хотя бы одно из них
с большой буквы.
Пример:
const words = ["apple", "banana", "Cherry"]; 
checkCapitalLetter(words) //true
EASY

4.6
Написать функцию checkLetterInArray(words, letter), которая принимает массив слов и букву. И возвращает, содержат ли все
слова в этом массиве эту букву.
const words = ["apple", "grape", "pineapple"];
checkLetterInArray(words, "p") //true
ПОдсказка: дополнительно можно использовать метод includes()
MEDIUM

4.7
Написать функцию, checkUnicNumbers(array), которая принимает массив цифр и проверяет все ли цифры там уникальные.
const numbers = [1, 2, 3, 4];
// Результат: true

const numbers2 = [1, 2, 3, 3];
// Результат: false
Подсказка: число уникально, если его первый индекс совпадает с текущим индексом. Метод every() принимает коллбэк функцию,
которая в качестве второго аргумента может принимать индекс - every( (elem, index) => { return})
MEDIUM

4.8
Написать функцию getWordsLenghts(words), которая принимает масив строк и возвращает новый массив с длинами этих строк. 
Например: 
const words = ["apple", "banana", "cherry"];
// Результат: [5, 6, 6]
Использовать метод map()
EASY

4.9
Написать функцию getNumbersMoreThanMine(numbers, num), которая принимает массив чисел и отдельное число. И возвращает новый
массив, в котором будут только те числа массива, которые больше переданного в качестве второго аргумента.
Например:
const numbers = [10, 20, 5, 30];
getNumbersMoreThanMine(numbers, 15)
// Результат: [20, 30]
Использовать метод filter
EASY

4.10
Написать функцию getCapitalWords(words), которая принимает массив строк и возвращает новый массив с этими же строками
в верхнем регистре.
const words = ["apple", "banana", "cherry"];
// Результат: ["APPLE", "BANANA", "CHERRY"]
Использовать метод map
EASY



*/