
3.1 /*
Создать функцию double , которая будет принимать число и возвращать увеличенное в два раза, т.е. 
double(100) должно вернуть 200
*/
3.2 /*
В созданную функцию double() подставить в качестве аргумента еще одну функцию double(200) с переданыым в качестве аргумента
числом 200. Посмотреть на результат (вывести в консоль). Разобраться как это работает.
*/
3.3/*
В файле teaser.js мы создали код, выводящий случайную дразнилку. Нужно подумать, как его можно оптимизировать с помощью
создания функций. Потом создать функцию sayTeaser(), которая будет выдавать случайную дразнилку.
*/
3.4 /*
По аналогии с задачей 2.6 создайте функцию showStars(rows, stars), которая будет выводить в консоль (не возвращать) фигуру
из звездочек (*). Количество строк со звездочками и количество самих звездочек в строках должно передаваться в функцие 
в виде аргументов. Исходят из них функция должна выводить в консоль соответствующее количество строк и число звездочек в 
этих строках. По умолчанию, если вызвана без аргументов, функция должна выводить 4 строки по 4 звездочки. ПРимер работы
функции:
showStars(3, 6)
должна вывести три ряда по шесть звездочек в каждом
******
******
******
*/
3.5 /**
Написать функцию  sumInRange , которая будет принимать два числа и возвращать сумму чисел в промежутке между первым и вторым.
Т.е. sumInRange(3, 6) должна вернуть сумму чисел 3+4+5+6 
*/
3.6 /*
Нужно написать функцию  shortenText(text) , которая будет брать любой текст и обрезать его до 100 пикселей, 
после чего добавлять "..." в конец. Типичная функция для обрезания текста, котрая используется на многих сайтах для 
вывода текста определенной длины, чтобы дизайн сайта  не разваливался.
Т.е. мы передаем в функцию текст - "Типичная функция для обрезания текста, котрая используется на многих сайтах для вывода текста определенной 
длины, чтобы дизайн сайта  не разваливался", а на выходе получаем что-то типа:
"Типичная функция для обрезания текста, котрая используется на многих сай..."
*/
