// yes
3.1 /*
Создать функцию double , которая будет принимать число и возвращать увеличенное в два раза, т.е. 
double(100) должно вернуть 200
*/
//yes
3.2 /*
В созданную функцию double() подставить в качестве аргумента еще одну функцию double(200) с переданыым в качестве аргумента
числом 200. Посмотреть на результат (вывести в консоль). Разобраться как это работает.
*/
//yes
3.3/*
В файле teaser.js мы создали код, выводящий случайную дразнилку. Нужно подумать, как его можно оптимизировать с помощью
создания функций. Потом создать функцию sayTeaser(), которая будет выдавать случайную дразнилку.
*/
//yes
3.4 /*
По аналогии с задачей 2.6 создайте функцию showStars(rows, stars), которая будет выводить в консоль (не возвращать) фигуру
из звездочек (*). Количество строк со звездочками и количество самих звездочек в строках должно передаваться в функцие 
в виде аргументов. Исходят из них функция должна выводить в консоль соответствующее количество строк и число звездочек в 
этих строках. По умолчанию, если вызвана без аргументов, функция должна выводить 4 строки по 4 звездочки. ПРимер работы
функции:
showStars(3, 6)
должна вывести три ряда по шесть звездочек в каждом
******
******
******
*/
//yes
3.5 /**
Написать функцию  sumInRange , которая будет принимать два числа и возвращать сумму чисел в промежутке между первым и вторым.
Т.е. sumInRange(3, 6) должна вернуть сумму чисел 3+4+5+6 
*/
//yes
3.6 /*
Нужно написать функцию  shortenText(text) , которая будет брать любой текст и обрезать его до 100 пикселей, 
после чего добавлять "..." в конец. Типичная функция для обрезания текста, котрая используется на многих сайтах для 
вывода текста определенной длины, чтобы дизайн сайта  не разваливался.
Т.е. мы передаем в функцию текст - "Типичная функция для обрезания текста, котрая используется на многих сайтах для вывода текста определенной 
длины, чтобы дизайн сайта  не разваливался", а на выходе получаем что-то типа:
"Типичная функция для обрезания текста, котрая используется на многих сай..."
*/
//yes
3.7 /* Создать функцию, которая выводит строку в консоль указанное количество раз. Функция должна принимать два аргумента:
строку (которую будем выводить) и число (сколько раз ее выводить)
EASY
*/
//yes
3.8 /*
В файле practice/pizza-count.js у нас есть такие функции:

const pizzaMoney = (count) => PIZZA_PRICE * count;
const drinkMoney = (count) => DRINK_PRICE * count;

const order = function (pizzaCount, drinkCount) {
    let pizza = pizzaMoney(pizzaCount);
    let drink = drinkMoney(drinkCount);
    return pizza + drink;
}
Нужно переписать функцию order в стрелочную и написать ее в одну строку
EASY
*/
//yes
3.9 /*
Есть функция, которая возвращает текущую дату в виде массива :
function getDateParts() {
  const date = new Date(); // Текущая дата
  return [date.getDate(), date.getMonth() + 1, date.getFullYear()];
}
Нужно через деструктуризацию получить данные из функции и вывести в консоль:
Сегодняшняя дата: 30.07.2025
Чтобы все работало нужно функцию getDateParts скопировать в файл с решением задачи.
EASY
*/
3.10 /*
создать функцию showMultiplicationTable(), которая будет выводить в консоль таблицу умножения:
   1	   2	   3	   4	   5	   6	   7	   8	   9	  10	
   2	   4	   6	   8	  10	  12	  14	  16	  18	  20	
   3	   6	   9	  12	  15	  18	  21	  24	  27	  30	
   4	   8	  12	  16	  20	  24	  28	  32	  36	  40	
   5	  10	  15	  20	  25	  30	  35	  40	  45	  50	
   6	  12	  18	  24	  30	  36	  42	  48	  54	  60	
   7	  14	  21	  28	  35	  42	  49	  56	  63	  70	
   8	  16	  24	  32	  40	  48	  56	  64	  72	  80	
   9	  18	  27	  36	  45	  54	  63	  72	  81	  90	
  10	  20	  30	  40	  50	  60	  70	  80	  90	 100	

  Использовать вложенные циклы.
  Чтобы таблица получилась такой же ровной, нужно формируемым строкам добавлять знак табуляции '\t', т.е.:
  ..ваш код, формирующий строку + "\t".
  Результат с кривыми столбцами тоже засчитывается.
  HARD
*/
3.11 /*
Напишите функцию displayRating(rating), которая принимает рейтинг (число от 1 до 5) и создает строку, 
в которой отображается рейтинг из 5 звезд, в них - "★" -  дополняется символом "☆" до длины 5. 
Т.е. если передаем цифру 3, получаем в консоли "★★★☆☆".
Используем методы repeat() / padEnd()
EASY
*/
3.12 /*
Напишите функцию min(), которая принимает в качестве аргумента массив и возвращает его минимальный элемент
EASY
*/
3.13 /*
Напишите функцию reverse(), которая принимает строку и возвращает ее в обратном порядке, т.е было "привет", стало "тевирп".
Использовать метод reverse - нельзя, используйте цикл.
EASY
*/